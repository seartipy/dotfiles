#! /usr/bin/env bash

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

{

source "${CURRENT_DIR}/scripts/utils.sh"
source "${CURRENT_DIR}/scripts/mods.sh"

# installer

is_gui() {
    [[ -n "$GUI" ]]
}

create_dirs() {
    setup_backup_dir
    smd ~/bin
}


setup_paths() {
    path_export "$HOME/bin"
    ignore_path_export "$HOME/.local/bin"
    is_ubuntu && path_export "/home/linuxbrew/.linuxbrew/bin"

    [ -f ~/.nvm/nvm.sh ] && source ~/.nvm/nvm.sh

    is_mac && path_export "/usr/local/opt/go/libexec/bin"

    ignore_path_export "$HOME/.cask/bin" # ignore only is HASKELL not selected
    ignore_path_export "$HOME/.local/share/coursier/bin" # ignore only is SCALA not selected
}

pre_installer_check() {
    setup_paths

    pre_cmd_check git curl wget unzip

    if is_ubuntu; then
        pre_cmd_check trash-put
    else
        pre_cmd_check trash
    fi

    pre_dir_check "$BACKUP_DIR" ~/bin
}

installer() {
    opts=(essential dotfiles "$@")

    slog "Installing..."

    mods_source ${opts[@]}
    mods_setup ${opts[@]}
    mods_install ${opts[@]}
    mods_cleanup ${opts[@]}

    if [ -n "$ZSH" ]; then
        echo "Set zsh as your default shell(in case this fails, run `chsh -s /bin/zsh` manually later)"
        chsh -s /bin/zsh
    fi

    post_installer_check

    slog "Installation done!"
}

# diagnostics

post_installer_check() {
    setup_paths

    [ -n "$ESSENTIAL" ] && essential_check
    [ -n "$DOTFILES" ] && dotfiles_check
    mods_check
}

source "${CURRENT_DIR}/scripts/bootstrap.sh"

}
